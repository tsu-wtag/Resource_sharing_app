# version: '3.8'

# services:
#   app:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     command: uvicorn main:app --host 0.0.0.0 --port 8000
#     ports:
#       - "8001:8000"
#     depends_on:
#       - db
#     restart: on-failure
#     environment:
#       - DB_HOST=db
#       - DB_USER=postgres
#       - POSTGRES_PASSWORD=123
#       - DB_NAME=fastapi
#       - SECRET_KEY = 7caed3dfc8ed0335575bf68010c01f3da141b249c73c26115c17456e017c0325
#       - ALGORITHM = "HS256"
#       - ACCESS_TOKEN_EXPIRE_MINUTES = 30
#     #entrypoint: [ "./wait-for.sh", "db:5432", "--", "uvicorn", "main:app", "--reload", "--host", "0.0.0.0", "--port", "8000" ]

#   db:
#     image: postgres:15.6
#     environment:
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: '123'
#       POSTGRES_DB: fastapi
#     ports:
#       - "5433:5432"
#     volumes:
#       - ${PWD}/db:/var/lib/postgresql/data
  
#   #--------------------------------------------


version: '3.8'
networks:
  monitoring:
    driver: bridge

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8002:8000"
    depends_on:
      - db
      - prometheus
    restart: always
    networks:
      - monitoring
    environment:
      - DB_HOST=db
      - DB_USER=postgres
      - POSTGRES_PASSWORD=123
      - DB_NAME=fastapi
    entrypoint: [ "./wait-for.sh", "db:5432", "--", "uvicorn", "main:app", "--reload", "--host", "0.0.0.0", "--port", "8000" ]

  db:
    image: postgres:15.6
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: '123'
      POSTGRES_DB: fastapi
    ports:
      - "5434:5432"
    networks:
      - monitoring
      
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    networks:
      - monitoring

#   alertmanager:
#     image: prom/alertmanager
#     container_name: alertmanager
#     ports:
#       - "9093:9093"
#     volumes:
#      - ./alertmanager.yaml:/etc/alertmanager/alertmanager.yaml
#     # command: --config.file=alertmanager.yaml 

#     restart: unless-stopped
#     networks:
#       - monitoring

#   grafana:
#     image: grafana/grafana
#     container_name: grafana
#     depends_on:
#       - prometheus
#     ports:
#       - "4000:3000"
#     volumes:
#       - grafana_data:/var/lib/grafana
#     environment:
#       - GF_SECURITY_ADMIN_PASSWORD=admin
#     networks:
#       - monitoring

# volumes:
#   grafana_data:
