# name: Build and Push Docker Images

# on:
#   pull_request:
#     types: [synchronize]
#   push:
#     branches:
#       - 'main'
#       - 'develop'

# jobs:
#   build-and-push-images:
#     if: ${{ github.event.pull_request.merged == true }}
#     name: Docker Build and Push Images
#     runs-on: self-hosted

#     env:
      # IMAGE_TAG: ${{ github.sha }}
      # GH_PACKAGES_ACCESS_TOKEN: ${{ secrets.GH_PACKAGES_ACCESS_TOKEN }}
      # GH_PACKAGES_ACCESS_TOKEN_RW: ${{ secrets.GH_PACKAGES_ACCESS_TOKEN_RW }}
      # GCP_SA: ${{ secrets.GCP_SA }}

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3

#       - name: Set Environment Variables Based on Branch
#         run: |
#           if [[ "${GITHUB_REF}" == "refs/heads/develop" ]]; then
#             echo "VITE_APP_ENV=staging" >> $GITHUB_ENV
#             echo "VITE_APP_NAME=welldev-nlp" >> $GITHUB_ENV
#             echo "VITE_APP_DOMAIN=https://nlp.preview.welltravel.com" >> $GITHUB_ENV
#             echo "VITE_APP_ROLLBAR_ACCESS_TOKEN=secret://rollbar-key" >> $GITHUB_ENV
#             echo "VITE_APP_ROLLBAR_ENV=FE-Staging" >> $GITHUB_ENV
#             echo "IMAGE_SUFFIX=-stage" >> $GITHUB_ENV
#           else
#             echo "VITE_APP_ENV=production" >> $GITHUB_ENV
#             echo "VITE_APP_NAME=welldev-nlp" >> $GITHUB_ENV
#             echo "VITE_APP_DOMAIN=https://nlp.welldev.io" >> $GITHUB_ENV
#             echo "VITE_APP_ROLLBAR_ACCESS_TOKEN=secret://rollbar-key" >> $GITHUB_ENV
#             echo "VITE_APP_ROLLBAR_ENV=FE-Production" >> $GITHUB_ENV
#             echo "IMAGE_SUFFIX=-prod" >> $GITHUB_ENV
#           fi

#       - name: Authenticate with Google Cloud
#         uses: google-github-actions/auth@v0.7.3
#         with:
#           credentials_json: ${{ secrets.GKE_SERVICE_ACCOUNT }}

#       - name: Build and Push Frontend Docker Image
#         run: |
#           cd frontend
#           docker build -t eu.gcr.io/nodal-algebra-161404/${{ env.PROJECT_PERMALINK }}:${{ github.sha }}${{ env.IMAGE_SUFFIX }} \
#                  -t eu.gcr.io/nodal-algebra-161404/${{ env.PROJECT_PERMALINK }}:build-cache${{ env.IMAGE_SUFFIX }} . \
#                  --build-arg VITE_APP_ROLLBAR_ACCESS_TOKEN=${{ env.VITE_APP_ROLLBAR_ACCESS_TOKEN }} \
#                  --build-arg VITE_APP_ROLLBAR_ENV=${{ env.VITE_APP_ROLLBAR_ENV }} \
#                  --build-arg VITE_APP_ENV=${{ env.VITE_APP_ENV }} \
#                  --build-arg VITE_APP_NAME=${{ env.VITE_APP_NAME }} \
#                  --build-arg VITE_APP_DOMAIN=${{ env.VITE_APP_DOMAIN }} \
#                  --cache-from eu.gcr.io/nodal-algebra-161404/${{ env.PROJECT_PERMALINK }}:build-cache${{ env.IMAGE_SUFFIX }}
#           docker push eu.gcr.io/nodal-algebra-161404/${{ env.PROJECT_PERMALINK }}:${{ github.sha }}${{ env.IMAGE_SUFFIX }}
#           docker push eu.gcr.io/nodal-algebra-161404/${{ env.PROJECT_PERMALINK }}:build-cache${{ env.IMAGE_SUFFIX }}

#       - name: Build and Push Backend Docker Image
#         run: |
#           cd backend
#           docker build -t eu.gcr.io/nodal-algebra-161404/backend:${{ github.sha }}${{ env.IMAGE_SUFFIX }} .
#           docker push eu.gcr.io/nodal-algebra-161404/backend:${{ github.sha }}${{ env.IMAGE_SUFFIX }}

#       - name: Build and Push Celery Docker Image
#         run: |
#           cd celery
#           docker build -t eu.gcr.io/nodal-algebra-161404/celery:${{ github.sha }}${{ env.IMAGE_SUFFIX }} .
#           docker push eu.gcr.io/nodal-algebra-161404/celery:${{ github.sha }}${{ env.IMAGE_SUFFIX }}

#       - name: Confirm Image Builds and Pushes
#         run: echo "All Docker images have been built and pushed successfully."
