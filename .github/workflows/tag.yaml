name: Create Release for Staging

on:
  push:
    branches:
      - 'develop'
      - 'master'

jobs:
  create-release:
    #if: ${{ github.event.pull_request.merged == true }}
    name: Create Release for Tags
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Fetch Tags
        run: git fetch --tags

      - name: Get Latest Tag
        id: get_latest_tag
        run: |
          # Get the latest tag that starts with "v"
          latest_tag=$(git tag --list 'v*' | sort -V | tail -n 1)
          echo "Latest tag: $latest_tag"
          
          # If no tag is found, set the initial version to v1
          if [ -z "$latest_tag" ]; then
            new_tag="v1"
          else
            # Extract the numeric part of the tag and increment it
            tag_number=${latest_tag//[!0-9]/} # Remove non-numeric characters
            new_number=$((tag_number + 1))
            new_tag="v$new_number"
          fi
          echo "New tag: $new_tag"
          echo "new_tag=$new_tag" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Token for authentication
        with:
          tag_name: ${{ env.new_tag }}  # Use the new incremented tag
          release_name: ${{ env.new_tag }}-stage  # Title of the release
          draft: false
          prerelease: false
